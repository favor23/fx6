<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="CustomerMapper"> 
 <resultMap type="com.choa.customer.CustomerDTO" id="CustomerDTO"></resultMap>
 <resultMap type="com.choa.movie.MovieDTO" id="MovieDTO"></resultMap>

	
	<insert id="dropuser_group" parameterType="com.choa.dropuser.DropUserDTO">
		insert into dropuser_group values(drop_seq.nextval,#{id},#{reason},#{etc_reason},sysdate)
	</insert>
	
	<delete id="dropuser" statementType="CALLABLE" parameterType="java.util.Map">
		{ call dropuser(#{drop, mode=IN}, #{result, mode=OUT, javaType=int, jdbcType=INTEGER}) }
	</delete>

	<select id="findPw" parameterType="com.choa.member.MemberDTO" resultType="java.lang.String">
		select id from member where id=#{id} and pw=#{pw}
	</select>


 	<insert id="join" statementType="CALLABLE" parameterType="java.util.Map" >
 	{ call member_join(#{customerDTO.id, mode=IN},#{customerDTO.pw, mode=IN},#{customerDTO.age,mode=IN},#{customerDTO.name,mode=IN},#{customerDTO.grade,mode=IN},#{customerDTO.phone,mode=IN},#{customerDTO.email,mode=IN},#{customerDTO.address,mode=IN},#{customerDTO.sung,mode=IN},#{customerDTO.birth,mode=IN},#{customerDTO.taste,mode=IN},#{result, mode=OUT, javaType=int, jdbcType=INTEGER}) }
 	</insert>
 	
 	<select id="gradeChecker" parameterType="java.lang.String" resultType="java.lang.String">
 		select grade from member where id=#{id}
 	</select>
 	
 	<select id="login" statementType="CALLABLE" parameterType="java.util.Map"> 
 	{ call customer_login(#{customerDTO.id, mode=IN},#{customerDTO.pw, mode=IN},#{customer, mode=OUT, jdbcType=CURSOR, javaType=java.sql.ResultSet, resultMap=CustomerDTO}) }
 	</select>
 	 	
 	<update id="update" statementType="CALLABLE" parameterType="java.util.Map">
 	{ call member_update(#{dto.id, mode=IN},#{dto.pw, mode=IN},#{dto.name, mode=IN},#{dto.phone, mode=IN},#{dto.email, mode=IN},#{dto.address, mode=IN},#{dto.taste, mode=IN},#{result, mode=OUT, javaType=int, jdbcType=INTEGER}) }
 	</update>
 	
 	<select id="idCheck" parameterType="com.choa.customer.CustomerDTO" resultType="com.choa.customer.CustomerDTO">
 	select id from customer where id=#{id}
 	</select>
 	
 	<select id="pwCheck" statementType="CALLABLE" parameterType="java.util.Map">
 	{ call pw_check(#{customerDTO.id, mode=IN},#{customerDTO.pw, mode=IN},#{check, mode=OUT, jdbcType=CURSOR, javaType=java.sql.ResultSet, resultMap=CustomerDTO}) }
 	</select>
 	
 	<select id="movieList" resultType="com.choa.movie.MovieDTO" parameterType="java.util.Map">
		select * from 
		(select rownum r, m.* from 
		(select * from movie where genre like 
		<foreach collection="taste" item="type" index="index" separator="or genre like">
		#{type}
		</foreach>
		order by movie_num asc) m) 
		where r between #{listInfo.startRow} and #{listInfo.lastRow}
	</select>
	<select id="movieList2" resultType="com.choa.movie.MovieDTO" parameterType="java.util.Map">
		select * from 
		(select rownum r, m.* from 
		(select * from movie where genre like #{taste}
		order by movie_num asc) m) 
		where r between #{listInfo.startRow} and #{listInfo.lastRow}
	</select>
	
	<select id="movieCount" resultType="java.lang.Integer" parameterType="java.util.Map">
	select nvl(count(movie_num), 0) from movie where genre like
	<foreach collection="taste" item="type" index="index1" separator="or genre like">#{type}</foreach>
	</select>
	
	<select id="movieCount2" resultType="java.lang.Integer" parameterType="java.util.Map">
	select nvl(count(movie_num), 0) from movie where genre like #{taste}
	</select>
	
	
	
	<update id="write_pr" parameterType="com.choa.pr.PrDTO">
	update mypr set award=#{award},education=#{education},activity=#{activity},introduce=#{introduce} where id=#{id}
	</update>
	
	<select id="view_pr" resultType="com.choa.pr.PrDTO" parameterType="com.choa.customer.CustomerDTO">
	select * from mypr where id=#{id}
	</select>
	
	<insert id="intoBan" parameterType="com.choa.banList.BanlistDTO"><!-- adminid ban reg_date -->
		insert into banlist values(#{targetId},#{reason},'nothing',#{senderId},#{roomNum},'x',ban_num.nextval,'없음',0,sysdate)
	</insert>
	
<!-- 영화가 종료될때 playview 번호를 가져와서 해당 playView를 가진 사람의 ban을 0으로 바꿔주기. -->
 </mapper> 