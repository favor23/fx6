<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
  	<mapper namespace="ReviewMapper">
  		
	<sql id="search">
  		<trim prefix="where" prefixOverrides="and || or">
  		<if test="search == 'title'">
  			title like '%' || #{find} || '%'
  		</if>
  		<if test="search == 'writer'">
  			writer like '%' || #{find} || '%'
  		</if>
  		<if test="search == 'contents'">
  			contents like '%' || #{find} || '%'
  		</if>
  		</trim>  	
  	</sql>
  		
  	<select id="count" resultType="java.lang.Integer" parameterType="com.choa.util.ListInfo">
  		select nvl(count(num), 0) from review 
  		<include refid="search"></include>
  	</select>	
  	
  	<select id="list" parameterType="com.choa.util.ListInfo" resultType="ReviewDTO">
  		select * from 
  		(select rownum R, N.* from 
  		(select * from review 
  		<include refid="search"></include>
  		   order by num desc) N) 
  		where R between #{startRow} and #{lastRow}
  	</select>
  	
  	<insert id="write" parameterType="ReviewDTO">
  		insert into review values(review_seq.nextval, #{writer}, #{title}, #{contents}, sysdate, 0, 0, #{stars}, #{movie_num})
  	</insert>
  	
  	<select id="view" resultType="ReviewDTO" parameterType="java.lang.Integer">
  		select * from review where num=#{num}
  	</select>
  	
  	<delete id="delete" parameterType="java.lang.Integer">
  		delete review where num=#{num}
  	</delete>
  	
  	<update id="update" parameterType="ReviewDTO">
  		update review set title=#{title}, contents=#{contents} where num=#{num}
  	</update>
  	
  	<update id="hit">
  		update review set hit=hit+1 where num=#{num}
  	</update>
   
  	</mapper>